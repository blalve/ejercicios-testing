package org.example;// Generated by Selenium IDE

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class Pacto1Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @BeforeEach
  public void setUp() {
    System.setProperty("webdriver.chrome.driver","C:\\Users\\blalvare\\OneDrive - Capgemini\\Desktop\\chromedriver\\chromedriver.exe");
    driver = new ChromeDriver();
    // configurar un timeout a la hora de localizar elementos HTML presentes
    driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void pacto1() {
    // Test name: pacto1
    // Step # | name | target | value
    // 1 | open | /pactometro/ | 
    driver.get("https://cursosdedesarrollo.com/pactometro/");
    // 2 | setWindowSize | 1552x840 | 
    driver.manage().window().setSize(new Dimension(1552, 840));
    // 3 | click | css=#part-BNG > img | 
    driver.findElement(By.cssSelector("#part-BNG > img")).click();
    // 4 | click | id=reset | 
    driver.findElement(By.id("reset")).click();

    WebElement elemento = new WebDriverWait(driver, Duration.ofSeconds(10))
            // Espera a un elemento clickable
            //.until(ExpectedConditions.elementToBeClickable(By.cssSelector("#part-ERC > img")));
            // Espera a un elemento presente
            .until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("#part-ERC > img")));


    // Elemento cuyo ID es "part-ERC"
    elemento = driver.findElement(By.id("part-ERC"));
    // Elemento cuyo ID es "part-PP"
    elemento = driver.findElement(By.cssSelector("#part-ERC"));
    // Elemento dentro de otro elemento img dentro de elemento por su ID
    elemento = driver.findElement(By.cssSelector("#part-ERC > img"));
    // Elemento dentro de otro elemento img dentro de elemento por su ID
    elemento = driver.findElement(By.cssSelector("#part-ERC > h2"));
    System.out.println(elemento.getText());
    assertEquals("13", elemento.getText());
    // 5 | assertElementPresent | css=#part-MasPais > img |
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("#part-MasPais > img"));
      assert(elements.size() > 0);
    }
    // 6 | click | css=#resultados > .titulo-centrado | 
    driver.findElement(By.cssSelector("#resultados > .titulo-centrado")).click();
    // 7 | click | css=#resultados > .titulo-centrado | 
    driver.findElement(By.cssSelector("#resultados > .titulo-centrado")).click();
    // 8 | click | css=#resultados > .titulo-centrado | 
    driver.findElement(By.cssSelector("#resultados > .titulo-centrado")).click();
    // 9 | assertText | css=#resultados > .titulo-centrado | Resultados
    assertEquals(driver.findElement(By.cssSelector("#resultados > .titulo-centrado")).getText(), "Resultados");
  }
}
